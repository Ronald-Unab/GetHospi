<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>